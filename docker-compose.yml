version: '3.8'

services:
  # Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_ML_SERVICE_URL=http://localhost:5001
    depends_on:
      - backend
      - ml-service
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/ai-commerce
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PAYFAST_MERCHANT_ID=${PAYFAST_MERCHANT_ID}
      - PAYFAST_MERCHANT_KEY=${PAYFAST_MERCHANT_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules

  # ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MODEL_PATH=/app/models
    volumes:
      - ./ml-service/models:/app/models
      - ./ml-service/data:/app/data
    depends_on:
      - mlflow

  # MLFlow Tracking
  mlflow:
    image: mlflow/mlflow:latest
    ports:
      - "5002:5000"
    command: mlflow server --backend-store-uri /mlflow --default-artifact-root /mlflow --host 0.0.0.0
    volumes:
      - mlflow_data:/mlflow

  # Graphics Studio
  graphics-studio:
    build:
      context: ./graphics-studio
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - NODE_ENV=production
    volumes:
      - ./graphics-studio:/app
      - /app/node_modules

  # Content Creator
  content-creator:
    build:
      context: ./content-creator
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./content-creator:/app
      - /app/node_modules

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "5005:5005"
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PAYFAST_MERCHANT_ID=${PAYFAST_MERCHANT_ID}
      - PAYFAST_MERCHANT_KEY=${PAYFAST_MERCHANT_KEY}
    volumes:
      - ./payment-service:/app
      - /app/node_modules

  # Security Service
  security-service:
    build:
      context: ./security
      dockerfile: Dockerfile
    ports:
      - "5006:5006"
    environment:
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./security:/app
      - /app/node_modules

  # Customer Support
  customer-support:
    build:
      context: ./customer-support
      dockerfile: Dockerfile
    ports:
      - "5007:5007"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./customer-support:/app
      - /app/node_modules

  # Compliance Service
  compliance-service:
    build:
      context: ./compliance
      dockerfile: Dockerfile
    ports:
      - "5008:5008"
    volumes:
      - ./compliance:/app
      - /app/node_modules

  # Database
  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend

volumes:
  mongodb_data:
  redis_data:
  mlflow_data:
